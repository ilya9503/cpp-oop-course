/*
    В C++ константная ссылка — это ссылка, через которую нельзя изменить значение объекта, на который она указывает.
    Она объявляется с использованием ключевого слова const.
    Зачем использовать константные ссылки:
        1. Безопасность: предотвращает изменение оригинального объекта внутри функции.
        2. Оптимизация: особенно полезна при передаче объектов больших размеров (например, std::string, std::vector), чтобы избежать копирования.
        3. Поддержка полиморфизма: в отличие от передачи по значению, передача по ссылке сохраняет полиморфизм.

    Возврат по ссылке:
        Возврат по ссылке — это просто «указатель» на уже существующий объект, без затрат на копирование.
        Чтобы запретить изменение возвращаемого значения
        Чтобы избежать копирования (повышение производительности)
        
    Нельзя возвращать ссылку на локальную переменную функции!
    Она уничтожается при выходе из функции, и ссылка будет «висячей» (undefined behavior):
*/


#include <iostream>

void printValue(const int& value) {
    std::cout << value << std::endl;
    // value = 10; // Ошибка! Нельзя изменить значение, потому что ссылка константная
}

void showName(const std::string& name) {    // гарантируется, что внутри showName name не изменится
    std::cout << "Имя: " << name << std::endl;
}

class Person {
    std::string name;
public:
    const std::string& getName() const {    // Возвращаем ссылку на приватную переменную. Она не должна меняться!
        return name;
    }
};

const std::string& getTempString() {
    std::string temp = "Hello";
    return temp; // ❌ ОПАСНО! temp уничтожится
}