/*
    2.5 Особенности работы конструкторов. Ключевые слова default, delete
    Компилятор по умолчанию использует в классе свой набор следующих методов:
        1. конструктор по умолчанию;
        2. конструктор копирования;
        3. операция присваивания копированием;
        4. деструктор (в виде заглушки)

    А, начиная со стандарта C++11, к ним добавилось еще два:
        5. конструктор перемещения;
        6. операция присваивания перемещением.

    Все эти методы могут быть замещены собственными, явно прописанными в классе
*/

#include <iostream>

class Vector {
    int x {0};
    int y {0};
public:
    Vector() = default;                 // указываем компилятору продолжать использовать свой собственный конструктор по умолчанию
    Vector() {};                        // свой собственный конструктор по умолчанию
    Vector(int a, int b): x(a), y(b)    // заместит конструктор по умолчанию
        { }
    Vector(const Vector& other)         // заместит конструктор копирования и конструктор по умолчанию
        { 
            x = other.x;
            y = other.y;
        }
    const Vector& operator=(const Vector& other)    // переопределение операции присваивания (на свою собственную реализацию)
    {
        if(this == &other) return *this;
    
        this->x = other.x;
        this->y = other.y;
        return *this;
    }
};

int main()
{
    Vector v1;      // конструктор по умолчанию
    Vector v2(v1);  // конструктор копирования
    Vector v3;
    v3 = v1;        // операция присваивания копированием

    return 0;
}