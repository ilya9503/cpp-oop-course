/*
    1 - если хотя бы одно число меньше или равно нулю;
    2 - если указанные числа (длины) a, b, c не могут являться длинами сторон треугольника;
        a+b>c, a+c>b, b+c>a
    3 - если длины a, b, c могут являться длинами сторон треугольника.

    Неравенство треугольника в геометрии, математическом анализе и смежных дисциплинах — это свойство,
        при котором длина любой стороны треугольника всегда меньше суммы длин двух других его сторон.
*/

#include <iostream>

// здесь объявляйте класс
class TriangleChecker {
    int a, b, c;
public:
    // Конструктор
    TriangleChecker(int s1=0, int s2=0, int s3=0) : a(s1), b(s2), c(s3)
        { }
    int is_triangle()
    {
        int res = 0;

        if(a <= 0 || b <= 0 || c <= 0)
            res = 1;
        else if((a + b > c) && (a + c > b) && (b + c > a))  // свойство неравенства треугольника
            res = 3;
        else
            res = 2;

        return res;
    }
};


int main(void)
{
    int a, b, c;
    std::cin >> a >> b >> c;

    // здесь продолжайте функцию main
    TriangleChecker* ptr_tr = new TriangleChecker(a, b, c);

    std::cout << ptr_tr->is_triangle() << std::endl;

    //__ASSERT_TESTS__ // макроопределение для тестирования (не убирать и должно идти непосредственно перед return 0 или перед освобождением памяти)

    // здесь освобождайте память
    delete ptr_tr;

    return 0;
}